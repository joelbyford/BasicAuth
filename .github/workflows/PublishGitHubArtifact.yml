# This is a basic workflow to help you get started with Actions

name: Manually Publish Nuget

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Get the latest version tag to duplicate it in the nuget package
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: joelbyford/BasicAuth  # The repository to scan.
          releases-only: true  # We know that all relevant tags have a GitHub release for them.
        id: latesttag  # The step ID to refer to later.
      
      # Install DotNet SDK
      - name: Setup dotnet 6.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          source-url: https://nuget.pkg.github.com/${{github.repository_owner}}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
      # Restore Dependancies (can be omitted if you remove --no-restore on build step)
      - name: Restore package dependencies
        run: dotnet restore

      # Build the project
      - name: dotet build
        run: dotnet build --no-restore --configuration Release

      # Pack the project for Nuget
      - name: dotnet pack
        if: success()  # this should be implied, but adding just to be sure this runs only when the previous steps are successfull
        run: dotnet pack -v normal -c Release --no-restore --include-source -p:PackageVersion=${{ steps.latesttag.outputs.tag }} -o ${{env.DOTNET_ROOT}}/myapp 
      
      # Upload the artifact to a GitHub 'Nuget' artifact repo
      - name: dotnet nuget push
        run: dotnet nuget push ${{env.DOTNET_ROOT}}/myapp/*.nupkg --api-key ${{secrets.GITHUB_TOKEN}} --skip-duplicate

        
      
